{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red23\green23\blue23;\red202\green202\blue202;
\red212\green214\blue154;\red194\green126\blue101;\red140\green211\blue254;\red167\green197\blue152;\red67\green192\blue160;
\red183\green111\blue179;\red89\green138\blue67;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c86275\c86275\c66667;\cssrgb\c80784\c56863\c47059;\cssrgb\c61176\c86275\c99608;\cssrgb\c70980\c80784\c65882;\cssrgb\c30588\c78824\c69020;
\cssrgb\c77255\c52549\c75294;\cssrgb\c41569\c60000\c33333;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 express\cf4 \strokec4  = \cf5 \strokec5 require\cf4 \strokec4 (\cf6 \strokec6 'express'\cf4 \strokec4 );\cb1 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 app\cf4 \strokec4  = \cf5 \strokec5 express\cf4 \strokec4 ();\cb1 \
\
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 server\cf4 \strokec4  = \cf7 \strokec7 app\cf4 \strokec4 .\cf5 \strokec5 listen\cf4 \strokec4 (\cf8 \strokec8 3400\cf4 \strokec4 );\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 app\cf4 \strokec4 .\cf5 \strokec5 use\cf4 \strokec4 (\cf5 \strokec5 express\cf4 \strokec4 .\cf5 \strokec5 static\cf4 \strokec4 (\cf6 \strokec6 'Public'\cf4 \strokec4 ));\cb1 \
\
\cf7 \cb3 \strokec7 console\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf6 \strokec6 "Server Running"\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 socket\cf4 \strokec4  = \cf5 \strokec5 require\cf4 \strokec4 (\cf6 \strokec6 'socket.io'\cf4 \strokec4 );\cb1 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 io\cf4 \strokec4  = \cf5 \strokec5 socket\cf4 \strokec4 (\cf7 \strokec7 server\cf4 \strokec4 );\cb1 \
\
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 players\cf4 \strokec4  = [];\cb1 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 grid\cf4 \strokec4  = [];\cb1 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 grid2\cf4 \strokec4  = [];\cb1 \
\
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf9 \strokec9 Point\cf4 \strokec4 (\cf7 \strokec7 x\cf4 \strokec4 , \cf7 \strokec7 y\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 this\cf4 \strokec4 .\cf7 \strokec7 x\cf4 \strokec4  = \cf7 \strokec7 x\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 this\cf4 \strokec4 .\cf7 \strokec7 y\cf4 \strokec4  = \cf7 \strokec7 y\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb3 \strokec10 for\cf4 \strokec4  (\cf7 \strokec7 i\cf4 \strokec4  = \cf8 \strokec8 0\cf4 \strokec4 ; \cf7 \strokec7 i\cf4 \strokec4  < \cf8 \strokec8 50\cf4 \strokec4 ; \cf7 \strokec7 i\cf4 \strokec4 ++) \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 p\cf4 \strokec4  = \cf2 \strokec2 new\cf4 \strokec4  \cf9 \strokec9 Point\cf4 \strokec4 (\cf7 \strokec7 Math\cf4 \strokec4 .\cf5 \strokec5 random\cf4 \strokec4 () * \cf8 \strokec8 4\cf4 \strokec4 , \cf7 \strokec7 Math\cf4 \strokec4 .\cf5 \strokec5 random\cf4 \strokec4 () * -\cf8 \strokec8 5000\cf4 \strokec4 );\cb1 \
\cb3     \cf7 \strokec7 grid\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 (\cf7 \strokec7 p\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb3 \strokec10 for\cf4 \strokec4  (\cf7 \strokec7 j\cf4 \strokec4  = \cf8 \strokec8 0\cf4 \strokec4 ; \cf7 \strokec7 j\cf4 \strokec4  < \cf8 \strokec8 50\cf4 \strokec4 ; \cf7 \strokec7 j\cf4 \strokec4 ++) \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 p2\cf4 \strokec4  = \cf2 \strokec2 new\cf4 \strokec4  \cf9 \strokec9 Point\cf4 \strokec4 (\cf7 \strokec7 Math\cf4 \strokec4 .\cf5 \strokec5 random\cf4 \strokec4 () * \cf8 \strokec8 4\cf4 \strokec4 , \cf7 \strokec7 Math\cf4 \strokec4 .\cf5 \strokec5 random\cf4 \strokec4 () * -\cf8 \strokec8 5000\cf4 \strokec4 );\cb1 \
\cb3     \cf7 \strokec7 grid2\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 (\cf7 \strokec7 p2\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf9 \strokec9 Player\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 constructor\cf4 \strokec4 (\cf7 \strokec7 id\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4  = \cf7 \strokec7 id\cf4 \strokec4 ;\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .\cf7 \strokec7 oppId\cf4 \strokec4  = \cf2 \strokec2 undefined\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 io\cf4 \strokec4 .\cf7 \strokec7 sockets\cf4 \strokec4 .\cf5 \strokec5 on\cf4 \strokec4 (\cf6 \strokec6 'connection'\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  (\cf7 \strokec7 socket\cf4 \strokec4 ) \{\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 socket\cf4 \strokec4 .\cf5 \strokec5 on\cf4 \strokec4 (\cf6 \strokec6 'join'\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  () \{\cb1 \
\
\cb3         \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  < \cf8 \strokec8 2\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 player\cf4 \strokec4  = \cf2 \strokec2 new\cf4 \strokec4  \cf9 \strokec9 Player\cf4 \strokec4 (\cf7 \strokec7 socket\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4 );\cb1 \
\cb3             \cf7 \strokec7 players\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 (\cf7 \strokec7 player\cf4 \strokec4 );\cb1 \
\
\cb3             \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  == \cf8 \strokec8 1\cf4 \strokec4 ) \{ \cf11 \strokec11 //establish waiting room\cf4 \cb1 \strokec4 \
\cb3                 \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 imp\cf4 \strokec4  = \cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4 ;\cb1 \
\cb3                 \cf7 \strokec7 console\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf6 \strokec6 "PLAYER 1 HAS JOINED :"\cf4 \strokec4  + \cf7 \strokec7 player\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 socket\cf4 \strokec4 .\cf7 \strokec7 broadcast\cf4 \strokec4 .\cf5 \strokec5 to\cf4 \strokec4 (\cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf7 \strokec7 id\cf4 \strokec4 ).\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 'waiting'\cf4 \strokec4 , \{ \cf7 \strokec7 playerNum:\cf4 \strokec4  \cf8 \strokec8 0\cf4 \strokec4 , \cf7 \strokec7 oppNum:\cf4 \strokec4  \cf8 \strokec8 1\cf4 \strokec4 , \cf7 \strokec7 imp:\cf4 \strokec4  \cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  \});\cb1 \
\cb3                 \cf7 \strokec7 socket\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 'waiting'\cf4 \strokec4 , \{ \cf7 \strokec7 playerNum:\cf4 \strokec4  \cf8 \strokec8 1\cf4 \strokec4 , \cf7 \strokec7 oppNum:\cf4 \strokec4  \cf8 \strokec8 0\cf4 \strokec4 , \cf7 \strokec7 imp:\cf4 \strokec4  \cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  \});\cb1 \
\cb3                 \cf7 \strokec7 io\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 "refreshnp"\cf4 \strokec4 , \cf7 \strokec7 players\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf10 \strokec10 else\cf4 \strokec4  \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  === \cf8 \strokec8 2\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf7 \strokec7 console\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf6 \strokec6 "PLAYER 2 HAS JOINED :"\cf4 \strokec4  + \cf7 \strokec7 player\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 io\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 "refreshnp"\cf4 \strokec4 , \cf7 \strokec7 players\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 io\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 "refreshGrid"\cf4 \strokec4 , \cf7 \strokec7 grid\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 io\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 "refreshGrid2"\cf4 \strokec4 , \cf7 \strokec7 grid2\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf7 \strokec7 oppId\cf4 \strokec4  = \cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 1\cf4 \strokec4 ].\cf7 \strokec7 id\cf4 \strokec4 ;\cb1 \
\cb3                 \cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 1\cf4 \strokec4 ].\cf7 \strokec7 oppId\cf4 \strokec4  = \cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf7 \strokec7 id\cf4 \strokec4 ;\cb1 \
\cb3                 \cf5 \strokec5 getIndex\cf4 \strokec4 (\cf7 \strokec7 socket\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4 );\cb1 \
\cb3                 \cf7 \strokec7 socket\cf4 \strokec4 .\cf7 \strokec7 broadcast\cf4 \strokec4 .\cf5 \strokec5 to\cf4 \strokec4 (\cf7 \strokec7 players\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf7 \strokec7 id\cf4 \strokec4 ).\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 'ready'\cf4 \strokec4 , \{ \cf7 \strokec7 playerNum:\cf4 \strokec4  \cf8 \strokec8 0\cf4 \strokec4 , \cf7 \strokec7 oppNum:\cf4 \strokec4  \cf8 \strokec8 1\cf4 \strokec4  \});\cb1 \
\cb3                 \cf7 \strokec7 socket\cf4 \strokec4 .\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 'ready'\cf4 \strokec4 , \{ \cf7 \strokec7 playerNum:\cf4 \strokec4  \cf8 \strokec8 1\cf4 \strokec4 , \cf7 \strokec7 oppNum:\cf4 \strokec4  \cf8 \strokec8 0\cf4 \strokec4  \});\cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\
\cb3     \});\cb1 \
\
\cb3     \cf7 \strokec7 socket\cf4 \strokec4 .\cf5 \strokec5 on\cf4 \strokec4 (\cf6 \strokec6 'updatePoints'\cf4 \strokec4 , (\cf7 \strokec7 pointData\cf4 \strokec4 ) \cf2 \strokec2 =>\cf4 \strokec4  \{\cb1 \
\cb3         \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 players\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  === \cf8 \strokec8 2\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 var\cf4 \strokec4  \cf7 \strokec7 playerInd\cf4 \strokec4  = \cf5 \strokec5 getIndex\cf4 \strokec4 (\cf7 \strokec7 pointData\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4 );\cb1 \
\cb3             \cf10 \strokec10 if\cf4 \strokec4  (\cf7 \strokec7 playerInd\cf4 \strokec4  !== -\cf8 \strokec8 1\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf7 \strokec7 socket\cf4 \strokec4 .\cf7 \strokec7 broadcast\cf4 \strokec4 .\cf5 \strokec5 to\cf4 \strokec4 (\cf7 \strokec7 players\cf4 \strokec4 [\cf7 \strokec7 playerInd\cf4 \strokec4 ].\cf7 \strokec7 oppId\cf4 \strokec4 ).\cf5 \strokec5 emit\cf4 \strokec4 (\cf6 \strokec6 "updatePointsAtLast"\cf4 \strokec4 , \cf7 \strokec7 pointData\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\cb3     \});\cb1 \
\cb3 \});\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 getIndex\cf4 \strokec4 (\cf7 \strokec7 id\cf4 \strokec4 ) \{ \cf11 \strokec11 //Get the player's position in the array\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 players\cf4 \strokec4 .\cf5 \strokec5 indexOf\cf4 \strokec4 (\cf7 \strokec7 players\cf4 \strokec4 .\cf5 \strokec5 find\cf4 \strokec4 ((\cf7 \strokec7 player\cf4 \strokec4 ) \cf2 \strokec2 =>\cf4 \strokec4  \{\cb1 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 player\cf4 \strokec4 .\cf7 \strokec7 id\cf4 \strokec4  === \cf7 \strokec7 id\cf4 \cb1 \strokec4 \
\cb3     \}));\cb1 \
\cb3 \}\cb1 \
\
}